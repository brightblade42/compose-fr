version: "3.9"
services:
    safrdb:
        image: postgres:14.1
        container_name: safrdb
        restart: always
        environment:
            - POSTGRES_USER=admin
            - POSTGRES_PASSWORD=admin
            - POSTGRES_DB=safr
        ports:
            - "${SAFR_DB_PORT}:5432"
            #- "80:5432"
        volumes:
            - safr-db:/var/lib/postgresql/data

    safr-api:
        image: eyemetricfr/safr:v0.91
        container_name: safr-api
        restart: always
        ports:
           - "${SAFR_API_HTTP_PORT}:3030"
        environment:
            - SAFR_DB_ADDR=${BASE_IP}
            - SAFR_DB_PORT=5433
            - VID_STREAM_ADDR=${BASE_IP}:5000
            - DETECT_ADDR=${BASE_IP}:5050
            - ALERTS_ADDR=${BASE_IP}:5051
            - IDENT_API=http://${BASE_IP}:8080/v4/
            - PROC_API=http://${BASE_IP}:8081/v6/
            - FR_API=${BASE_IP}:80
            - TPASS_USER=admin
            - TPASS_PWD=njbs1968
            - TPASS_ADDR=https://devsys01.tpassvms.com/TPassPVService/
            - MIN_MATCH=0
            - MATCH_EXPIRES=10
            - MIN_QUALITY=0.8
            - MIN_DUPE_MATCH=0.98


    safr-cams:
        #image: eyemetricfr/safr-cams:v0.91
        image: eyemetricfr/safr-cams:v0.91d
        container_name: safr-cams
        restart: always
        ports:
           - "3031:80"
        environment:
            - SAFR_DB_ADDR=${BASE_IP}
            - SAFR_DB_PORT=5433
            - VID_STREAM_ADDR=${BASE_IP}:5000
            - DETECT_ADDR=${BASE_IP}:5050
            - ALERTS_ADDR=${BASE_IP}:5051
            - FR_API=${BASE_IP}:80
            - MIN_MATCH=0.50
            - MATCH_EXPIRES=10
            - MIN_QUALITY=0.8
    proc:
        image: "paravision/processor:v6-gen5-balanced-tensorrt"
        container_name: proc-v6
        deploy:
            resources:
                reservations:
                    devices:
                      - capabilities: [gpu]
        environment:
            - PV_HTTP_INTERFACE=on
            - PV_INFERENCE_WORKERS=1
        network_mode: bridge
        restart: always
        ports:
            - "50051:50051"
            - "8081:8081"
    ident:
        image: "paravision/identity:v4.0.0"
        container_name: ident-v4
        environment:
            - POSTGRES_URI=postgresql://admin:admin@pvdb:5432/identity?sslmode=disable
            - HTTP_PROXY=on
        network_mode: bridge
        restart: always
        ports:
            - "5656:5656"
            - "8080:8080"
        depends_on:
            - pvdb
        links:
            - pvdb
    pvdb:
        image: "paravision/postgres:12.0"
        container_name: pvdb
        network_mode: bridge
        restart: always
        environment:
            - POSTGRES_USER=admin
            - POSTGRES_PASSWORD=admin
            - POSTGRES_DB=identity
        ports:
            - "5432:5432"
        volumes:
            - pv-data:/var/lib/postgresql/data

    pvstrm:
        image: "paravision/streaming:v6.0.0-tensorrt"
        container_name: streaming-v6
        deploy:
            resources:
                reservations:
                    devices:
                      - capabilities: [gpu]
        environment:
            - TZ=${TZ}
            - PV_INFERENCE_WORKERS=1
            - PV_POSTPROCESSOR_WORKERS=1
            - PV_OUTPUT_FACES_ONLY=True
            - PV_FACE_QUALITY_TRACKING=0.50
            - NVIDIA_VISIBLE_DEVICES=all
            - NVIDIA_DRIVER_CAPABILITIES=all
        network_mode: bridge
        restart: always
        ports:
            - "5000:5000"
            - "5050:5050"
            - "5051:5051"
        volumes:
            - type: tmpfs
              target: /dev/shm
              tmpfs:
                  size: 3g #000000000 # ~6gb

        depends_on:
            - pvdb
        
volumes:
    pv-data:
    safr-db:
